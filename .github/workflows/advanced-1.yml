# ------------DO-NOT-MODIFY-THIS-FILE------------
# This file was automatically generated by github-actions-workflow-ts.
# DO NOT MODIFY IT BY HAND. Instead, modify the source *.wac.ts file(s)
# and run "generate-workflow-files build" (or "gwf build") to regenerate this file.
# For more information, run "generate-workflow-files --help".
# ------------DO-NOT-MODIFY-THIS-FILE------------
name: ExampleAdvanced
'on':
  workflow_dispatch: {}
jobs:
  Test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node:
          - 12.x
          - 14.x
          - 16.x
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: 'false'
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles("**/pnpm-lock.yaml") }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - name: Setup npmrc for Private Packages
        run: >-
          echo "@your-org:registry=https://npm.pkg.github.com" >> .npmrc

          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >>
          .npmrc
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        run: pnpm run test
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: 'false'
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles("**/pnpm-lock.yaml") }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - name: Setup npmrc for Private Packages
        run: >-
          echo "@your-org:registry=https://npm.pkg.github.com" >> .npmrc

          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >>
          .npmrc
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
        env:
          VITE_APP_VERSION: ${{ env.GITHUB_SHA }}
  Deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: ${{ ${{ github.event_name == 'release' && prod || dev }} }}
    permissions:
      contents: read
      id-token: write
    needs:
      - Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: 'false'
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles("**/pnpm-lock.yaml") }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - name: Setup npmrc for Private Packages
        run: >-
          echo "@your-org:registry=https://npm.pkg.github.com" >> .npmrc

          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >>
          .npmrc
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Deploy
        run: pnpm run deploy
      - name: Multi line yaml with special characters
        run: |-
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
  ReleaseJob:
    uses: your-org/your-repo/.github/workflows/reusable-workflow.yml@main
    secrets: inherit
